CREATE TABLE PATIENT (
    PATIENT_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    DATE_OF_BIRTH DATE,
    EMAIL VARCHAR2(100),
    GENDER VARCHAR2(10),
    CONTACT_NO VARCHAR2(11) NOT NULL,
    ADDRESS VARCHAR2(100),
    CITY VARCHAR2(100)
);

CREATE TABLE ADMISSION (
    ADMISSION_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    DATE_OF_ADMISSION DATE NOT NULL,
    DISCHARGE_DATE DATE,
    PATIENT_ID NUMBER NOT NULL,
    
    CONSTRAINT FK_ADMISSION FOREIGN KEY (PATIENT_ID) REFERENCES PATIENT(PATIENT_ID)
);


CREATE TABLE DEPARTMENT (
    ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    NAME VARCHAR2(50) NOT NULL UNIQUE
);

CREATE TABLE DOCTOR (
    DOCTOR_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR2(50) not null,
    LAST_NAME VARCHAR2(50) NOT NULL,
    CONTACT_NO VARCHAR2(11) NOT NULL,
    SPECIALITY VARCHAR2(100) NOT NULL, -- MULTIPLE, COMMA-SEPARATED
    DEPARTMENT_ID NUMBER NOT NULL,
    CONSTRAINT FK_DOCTOR_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (ID)
);

CREATE TABLE MEDICINE (
    MEDICINE_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    TRADE_NAME VARCHAR2(50) NOT NULL,
    GENERIC_NAME VARCHAR2(50) NOT NULL,
    STRENGTH VARCHAR2(50), -- 500 mg, 625 mg
    DESCRIPTION VARCHAR2(500), -- COMPOSITION, DOSAGE, PRECAUTIONS
    MANUFACTURER VARCHAR2(50) NOT NULL,
    PRICE NUMBER NOT NULL CHECK (PRICE >= 0)
);

CREATE TABLE MEDICINE_TAKEN (
    MEDICINE_TAKEN_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    MEDICINE_ID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL CHECK (QUANTITY > 0),
    TAKEN_DATE DATE NOT NULL,
    UNIT_COST NUMBER NOT NULL CHECK (UNIT_COST >= 0),
    ADMISSION_ID NUMBER NOT NULL,
    
    CONSTRAINT FK_MEDICINE_TAKEN_MEDICINE FOREIGN KEY (MEDICINE_ID) REFERENCES MEDICINE (MEDICINE_ID),
    CONSTRAINT FK_MEDICINE_TAKEN_ADMISSION FOREIGN KEY (ADMISSION_ID) REFERENCES ADMISSION (ADMISSION_ID)
);


CREATE TABLE TEST (
    TEST_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    TEST_NAME VARCHAR2(500) NOT NULL,
    DESCRIPTION VARCHAR2(500), -- WHAT TYPE OF TEST
    COST NUMBER NOT NULL CHECK (COST >= 0)
);

CREATE TABLE TEST_TAKEN (
    TEST_TAKEN_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    TAKEN_DATE DATE NOT NULL,
    COST NUMBER NOT NULL CHECK (COST >= 0),
    REPORT VARCHAR2(1000),
    ADMISSION_ID NUMBER,
    TEST_ID NUMBER,
    CONSTRAINT FK_TEST_TAKEN_ADMISSION FOREIGN KEY (ADMISSION_ID) REFERENCES ADMISSION (ADMISSION_ID),
    CONSTRAINT FK_TEST_TAKEN_TEST FOREIGN KEY (TEST_ID) REFERENCES TEST (TEST_ID)
);

CREATE TABLE ROOM (
    ROOM_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    ROOM_NAME VARCHAR2(50) NOT NULL, -- F20 G09
    CAPACITY NUMBER CHECK (CAPACITY > 0), -- derived attribute
    ROOM_TYPE VARCHAR2(50) NOT NULL -- WARD (multiple patients), CABIN (one)
);

CREATE TABLE BED (
    BED_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BED_NUMBER VARCHAR2(10) not null, -- 2A 2B 23C 23B AND SO ON (WHERE, IN 23A, 23 IS THE ROOM NUMBER)
    COST_PER_NIGHT NUMBER NOT NULL CHECK (COST_PER_NIGHT >= 0),
    ROOM_ID NUMBER NOT NULL,
    CONSTRAINT FK_BED_ROOM FOREIGN KEY (ROOM_ID) REFERENCES ROOM (ROOM_ID)
);

CREATE TABLE BED_TAKEN (
    BED_TAKEN_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    BED_ID NUMBER NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    --COST NUMBER CHECK (COST >= 0),
    COST_PER_NIGHT NUMBER CHECK (COST_PER_NIGHT >= 0),
    NUMBER_OF_NIGHTS_STAYED NUMBER, -- DERIVED
    ADMISSION_ID NUMBER NOT NULL,
    CONSTRAINT FK_BED_TAKEN_BED FOREIGN KEY (BED_ID) REFERENCES BED (BED_ID),
    CONSTRAINT FK_BED_TAKEN_ADMISSION FOREIGN KEY (ADMISSION_ID) REFERENCES ADMISSION (ADMISSION_ID)
);